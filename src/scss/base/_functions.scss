// Shamelessly borrowed & modified via @ https://github.com/foundation/foundation-sites / https://github.com/foundation/foundation-sites/blob/develop/scss/util/_unit.scss
@use "sass:math";
@use "sass:string";
@use "sass:map";

// This is the default html and body font-size for the base rem value.
$rem-base: 16px !default;
$global-font-size: 100% !default;

@function strip-unit($num) {
  @return math.div($num, $num * 0 + 1);
}

@function convert-to-em($value) {
  // Pixel and unitless values are converted to rems
  @if unit($value) == 'px' or unitless($value) {
    $value: rem-calc($value, $base: 16px);
  }

  // Then the value is converted to ems
  @return strip-unit($value) * 1em;
}

@function convert-to-rem($value, $base: $rem-base) {
  // Check if the value is a number
  @if type-of($value) != 'number' {
    @if $unit-warnings {
      @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
    }
    @return $value;
  }

  // Transform em into rem if someone hands over 'em's
  @if unit($value) == 'em' {
    $value: strip-unit($value) * 1rem;
  }

  // Calculate rem if units for $value is not rem or em
  @if unit($value) != 'rem' {
    $value: math.div( strip-unit($value), strip-unit($base) ) * 1rem;
  }

  // Turn 0rem into 0
  @if $value == 0rem {
    $value: 0;
  }

  @return $value;
}

/// Map deep get
/// @author Kitty Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

// 
@function rem-calc($values, $base: null) {
  $rem-values: ();
  $count: length($values);

  // If no base is defined, defer to the global font size
  @if $base == null {
    $base: $global-font-size;
  }

  // If the base font size is a %, then multiply it by 16px
  // This is because 100% font size = 16px in most all browsers
  @if unit($base) == '%' {
    $base: math.div($base, 100%) * 16px;
  }

  // Using rem as base allows correct scaling
  @if unit($base) == 'rem' {
    $base: strip-unit($base) * 16px;
  }

  @if $count == 1 {
    @return convert-to-rem($values, $base);
  }

  @for $i from 1 through $count {
    $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base));
  }

  @return $rem-values;
}


/// Replace `$search` with `$replace` in `$string`
/// @author Kitty Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}
