---js
{
  layout: "layouts/main.njk",
  pagination: {
    data: "collection",
    size: 1,
    alias: "item",
    resolve: "values",
    before: function(data) {
      const items = data.filter(x => !x.exclude);
      return items;
    },
    addAllPagesToCollections: true,
  },
  permalink: "/{{ item.meta.title | slugify }}/",
  nav: {
    parent: "/courses/",
    secondary: "courses",
    secondaryParent: "/collections",
  },
  eleventyComputed: {
    meta: {
      bodyClass: "collection {{ item.meta.slug }}",
      title: "{{ item.meta.title }} | Collections",
      description: "{{ item.meta.description | strip_html }}",
      sitemapExclude: function(data) {
        const bool = data.item.meta.sitemapExclude ? data.item.meta.sitemapExclude : false;
        return bool;
      },
      redirectFrom: function(data) {
        return data.item.meta.redirectFrom;
      },
      css: function(data) {
        return data.item.meta.css;
      }
    }
  },
}
---
{#
Note: several of the 6 collections have similar layouts.
TODO:
- write some logic to support a collection layout/type
- add support for different modules, like dynamically fetched courses, tutorials, webinars
- add jobs module
#}

{# Here we're omitting some object keys to be able to loop through the content fields #}
{%- set content = item | omit(['id', 'meta', 'card', 'header']) -%}
{%- if item.meta.unique -%}
  {# Here we're omitting some object keys to be able to loop through the content fields #}
  {%- set content = item | omit(['id', 'meta', 'card']) -%}
{%- else -%}
  {%- if not item.header -%}
  <header>
    <h1>{{ item.meta.title }}</h1>
    <p>{{ item.meta.description }}</p>
  </header>
  {%- else -%}
    {%- set header = item.header -%}
    {%- include 'modules/components/header.njk' -%}
  {%- endif -%}

  {%- set module = featured['collection'][item.meta.slug] -%}
  {%- include 'modules/featured/smart-cards.njk' -%}
{%- endif -%}

{%- include 'modules/loader.njk' -%}
