---js
{
  layout: "layouts/main.njk",
  pagination: {
    data: "collection",
    size: 1,
    alias: "item",
    resolve: "values",
    before: function(data) {
      const items = data.filter(x => !x.exclude);
      return items;
    },
    addAllPagesToCollections: true,
  },
  permalink: "/{{ item.title | slugify }}/",
  eleventyComputed: {
    title: "{{ item.title }} | Collections",
    description: "{{ item.description | strip_html }}",
    sitemapExclude: function(data) {
      const bool = data.item.sitemapExclude ? data.item.sitemapExclude : false;
      return bool;
    },
    redirectFrom: function(data) {
      return data.item.redirectFrom;
    }
  },
}
---
{# 
Note: several of the 6 collections have similar layouts. 
TODO:
- write some logic to support a collection layout/type
- add support for different modules, like dynamically fetched courses, tutorials, webinars
- add jobs module
#}
<header>
  <h1>{{ item.title }}</h1>
  <h4>{{ item.id }}</h4>
  <p>{{ item.description }}</p>
</header>

{# Here we're omitting some object keys to be able to loop through the content fields #}
{%- set content = item | omit(['id', 'title', 'topic', 'description', 'slug', 'order', 'redirectFrom', 'exclude', 'sitemapExclude', 'tags', 'category', 'categories', 'unique']) -%}

{%- if content -%}
  {%- for key, section in content -%}
    <section id="{{ key }}">
      {# Load modules! #}
      {# Let's rename sections to modules, so we can keep track of what we're dealing with #}
      {%- set module = section -%}
      {%- if module.subdir -%}
        {%- include 'components/modules/' + module.subdir + '/' + key + '.html' -%}
      {%- else -%}
        {%- include 'components/modules/' + key + '.html' -%}
      {%- endif -%}
    </section>
  {%- endfor -%}
{%- endif -%}